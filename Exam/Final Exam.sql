-- 1번 문제
CREATE TABLE ORD(
    OID NUMBER(5),
    ONUM NUMBER(5),
    CHECK(ONUM BETWEEN 10 AND 100)
);

DROP TABLE ORD;

-- 2번 문제
SELECT E.ENAME, E.HIREDATE, E.DEPTNO, D.DNAME
FROM (SELECT DEPTNO, MIN(HIREDATE) "MIN_HIRE"
    FROM EMP
    GROUP BY DEPTNO) V, EMP E, DEPT D
WHERE V.DEPTNO = E.DEPTNO AND E.DEPTNO = D.DEPTNO AND E.HIREDATE = V.MIN_HIRE;

-- 3번 문제
--CREATE TABLE EMP3 AS SELECT * FROM EMP;

CREATE OR REPLACE FUNCTION SAL_LEVEL
(TSAL EMP3.SAL%TYPE)
RETURN VARCHAR2
IS
    SAL_LVL VARCHAR2(10);
BEGIN
    IF TSAL <= 1500 THEN
        SAL_LVL := 'LOW';
    ELSIF TSAL <= 3000 THEN
        SAL_LVL := 'MIDDLE';
    ELSIF TSAL <= 5000 THEN
        SAL_LVL := 'HIGH';
    END IF;
    RETURN SAL_LVL;
END;
/

SELECT EMPNO, SAL + NVL(COMM, 0), SAL_LEVEL(SAL + NVL(COMM, 0))
FROM EMP3;

-- 4번 문제
CREATE TABLE SEMP(
    SSEQ NUMBER,
    SEMPNO NUMBER(4,0),
    SSAL NUMBER(7,2),
    SDEPTNO NUMBER(2,0)
);

CREATE SEQUENCE SEQNUM;

CREATE OR REPLACE PROCEDURE PR1 (DNO EMP3.DEPTNO%TYPE)
IS
    CURSOR CUR IS
        SELECT EMPNO, SAL, DEPTNO
        FROM EMP3
        WHERE DEPTNO = DNO
            AND SAL > (SELECT AVG(SAL)
            FROM EMP3
            WHERE DEPTNO = DNO);
BEGIN
    FOR REC IN CUR
    LOOP
        INSERT INTO SEMP VALUES(SEQNUM.NEXTVAL, REC.EMPNO, REC.SAL, REC.DEPTNO);
    END LOOP;
END;
/

EXEC PR1(10);
EXEC PR1(20);
EXEC PR1(30);

--TRUNCATE TABLE SEMP;

-- 5번 문제
CREATE TABLE UP_LOG(
    EMPNO NUMBER(4,0),
    O_SAL NUMBER(7,2),
    N_SAL NUMBER(7,2),
    LDATE DATE
);

CREATE OR REPLACE TRIGGER TR1
AFTER UPDATE ON EMP3
FOR EACH ROW
BEGIN
    INSERT INTO UP_LOG VALUES(:NEW.EMPNO, :OLD.SAL, :NEW.SAL, SYSDATE);
END;
/

UPDATE EMP3
SET SAL = 9999
WHERE EMPNO = 7369;

DROP TABLE EMP3;
DROP TABLE UP_LOG;
DROP TABLE SEMP;
