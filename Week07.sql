-- Week07
-- 각 교수의 지도하는 학생수
SELECT PROFNO, COUNT(*) || '명' "지도 학생수"
FROM STUDENT
GROUP BY PROFNO
ORDER BY 1;

SELECT NVL2(PROFNO, TO_CHAR(PROFNO), '지도교수 없음') "지도교수", COUNT(*) || '명' "지도 학생수"
FROM STUDENT
GROUP BY PROFNO
ORDER BY 1;

-- 각 학년별로 각 학과 별 학생수
SELECT GRADE "학년", DEPTNO1 "학과", COUNT(*) || '명' "학생수"
FROM STUDENT
GROUP BY GRADE, DEPTNO1
ORDER BY 1;

-- 각 학년별로 각 학과 별 학생수, GROUPING SET 함수 사용하기
SELECT GRADE "학년", DEPTNO1 "학과", COUNT(*) || '명' "학생수"
FROM STUDENT
GROUP BY GROUPING SETS (GRADE, DEPTNO1)
ORDER BY 1;

-- EMP2 테이블 - 같은 부서에서 EMP_TYPE 이 같은 사원수가 2명 이상이고,
-- 평균 PAY가 5000만원 이상인 사원 검색
SELECT DEPTNO, EMP_TYPE, LISTAGG(NAME, ', ') WITHIN GROUP(ORDER BY NAME) "ENAME",
    COUNT(*) "EMP 타입 별 사원수",
    TO_CHAR(ROUND(AVG(PAY), 2), 'L999,999,999') || '원' "평균 연봉"
FROM EMP2
GROUP BY DEPTNO, EMP_TYPE HAVING COUNT(*) >= 2 AND AVG(PAY) >= 5000
ORDER BY 1;

-- 부서 번호가 10인 사원의 이름과 부서 이름 검색
SELECT E.ENAME, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.DEPTNO = 10;

SELECT E.ENAME, D.DNAME
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE E.DEPTNO = 10;

-- 101번 학과에 속한 학생의 이름, 지도교수 이름 검색
SELECT S.NAME "학생 이름", P.NAME "지도교수 이름"
FROM STUDENT S, PROFESSOR P
WHERE S.PROFNO = P.PROFNO AND S.DEPTNO1 = 101;

-- 각 교수의 지도하는 학생수 + 교수 이름도 같이 출력
SELECT S.PROFNO, P.NAME "교수 이름", COUNT(*) || '명' "지도 학생수"
FROM STUDENT S, PROFESSOR P
WHERE S.PROFNO = P.PROFNO
GROUP BY S.PROFNO, P.NAME
ORDER BY 1;

SELECT S.PROFNO, P.NAME "교수 이름", COUNT(*) || '명' "지도 학생수"
FROM STUDENT S JOIN PROFESSOR P
ON S.PROFNO = P.PROFNO
GROUP BY S.PROFNO, P.NAME
ORDER BY 1;

-- EMP2 테이블 - 사원의 이름, 부서명, 부서 번호, 연봉, 부서 내 연봉 비율 검색
SELECT E.NAME, D.DNAME, E.DEPTNO, E.PAY,
    ROUND(RATIO_TO_REPORT(E.PAY) OVER(PARTITION BY D.DNAME)*100, 2) || '%' "RATIO"
FROM EMP2 E, DEPT2 D
WHERE E.DEPTNO = D.DCODE
ORDER BY 3;

-- EMP2, DEPT2 테이블 - 부서가 1000번이고 POSITION 이 Department head 인
-- 사원 이름, 부서명, 부서번호, POSITION, PAY 검색
SELECT E.NAME, D.DNAME, E.DEPTNO, E.POSITION, E.PAY
FROM EMP2 E, DEPT2 D
WHERE E.DEPTNO = D.DCODE AND DEPTNO = 1000 AND POSITION = 'Department head';

-- 4장 JOIN 237P - 예제 1번
SELECT *
FROM CUSTOMER C, GIFT G
WHERE C.POINT BETWEEN G.G_START AND G.G_END;

SELECT C.GNAME "CUST_NAME", C.POINT "POINT", G.GNAME "GIFT_NAME"
FROM CUSTOMER C, GIFT G
WHERE C.POINT BETWEEN G.G_START AND G.G_END;

-- LCD Monitor 상품을 받을 수 있는 고객 이름, 포인트, 상품명 검색
SELECT C.GNAME "CUST_NAME", C.POINT "POINT", G.GNAME "GIFT_NAME"
FROM CUSTOMER C, GIFT G
WHERE C.POINT BETWEEN G.G_START AND G.G_END AND G.GNAME = 'LCD Monitor';

SELECT C.GNAME "CUST_NAME", C.POINT "POINT", G.GNAME "GIFT_NAME"
FROM CUSTOMER C JOIN GIFT G
ON C.POINT BETWEEN G.G_START AND G.G_END
WHERE G.GNAME = 'LCD Monitor';

SELECT C.GNAME "CUST_NAME", C.POINT "POINT", G.GNAME "GIFT_NAME"
FROM CUSTOMER C, GIFT G
WHERE C.POINT > G.G_START AND G.GNAME = 'LCD Monitor'
ORDER BY 2 DESC;

-- 학생이름, 점수, 학점 검색 (점수로 오름차순 정렬)
SELECT S.NAME "학생 이름", O.TOTAL "점수", H.GRADE "학점 등급"
FROM STUDENT S, SCORE O, HAKJUM H
WHERE S.STUDNO = O.STUDNO AND O.TOTAL BETWEEN H.MIN_POINT AND H.MAX_POINT
ORDER BY 2;

SELECT S.NAME "학생 이름", O.TOTAL "점수", H.GRADE "학점 등급"
FROM STUDENT S JOIN SCORE O
ON S.STUDNO = O.STUDNO
JOIN HAKJUM H
ON O.TOTAL BETWEEN H.MIN_POINT AND H.MAX_POINT
ORDER BY 2;

-- 성적 A+을 받은 학생의 이름, 점수, 학점 검색
SELECT S.NAME "학생 이름", O.TOTAL "점수", H.GRADE "학점 등급"
FROM STUDENT S, SCORE O, HAKJUM H
WHERE S.STUDNO = O.STUDNO AND O.TOTAL BETWEEN H.MIN_POINT AND H.MAX_POINT AND H.GRADE = 'A+'
ORDER BY 2;

-- 성적 B+ 이상을 받은 학생의 이름, 점수, 학점 검색
SELECT S.NAME "학생 이름", O.TOTAL "점수", H.GRADE "학점 등급"
FROM STUDENT S, SCORE O, HAKJUM H
WHERE S.STUDNO = O.STUDNO AND O.TOTAL BETWEEN H.MIN_POINT AND H.MAX_POINT AND O.TOTAL >= 85
ORDER BY 2;

SELECT S.NAME "학생 이름", O.TOTAL "점수", H.GRADE "학점 등급"
FROM STUDENT S, SCORE O, HAKJUM H
WHERE S.STUDNO = O.STUDNO AND O.TOTAL BETWEEN H.MIN_POINT AND H.MAX_POINT AND H.GRADE < 'B0'
ORDER BY 2;

-- 4장 OUTER JOIN 241P - 예제 1번
SELECT S.NAME "STU_NAME", P.NAME "PROF_NAME"
FROM STUDENT S, PROFESSOR P
WHERE S.PROFNO = P.PROFNO(+);

SELECT S.NAME "STU_NAME", P.NAME "PROF_NAME"
FROM STUDENT S LEFT OUTER JOIN PROFESSOR P
ON S.PROFNO = P.PROFNO;

-- 사원이 없는 부서를 포함하여 사원 이름, 부서 이름 검색
SELECT E.ENAME "사원 이름", D.DNAME "부서 이름"
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO;

SELECT E.ENAME "사원 이름", D.DNAME "부서 이름"
FROM EMP E RIGHT OUTER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;

-- 상사가 없는 사원을 포함하여 사원 이름과 상사 이름 검색
SELECT A.ENAME "사원 이름", B.ENAME "상사 이름"
FROM EMP A, EMP B
WHERE A.MGR = B.EMPNO(+)
ORDER BY 1;

SELECT A.ENAME "사원 이름", B.ENAME "상사 이름"
FROM EMP A, EMP B
WHERE A.MGR = B.EMPNO AND A.DEPTNO = 30
ORDER BY 1;
